@model StampDutyIndexViewModel

@{
    ViewData["Title"] = "Home Page";
}
@* <div class="text-left">
    <h1 class="display-4 mb-4">Welcome</h1>
</div> *@
<div class="container">
    <div class="row">        
        <div class="col-md-6">
            <h3 class="display-5 mb-4">Stamp Duty Calculator</h3>
            <div class="form-group">
                <label for="stateDropdown" class="form-label">Select State:</label>
                <select id="stateDropdown" name="stateName" class="form-select">


                    @foreach (var state in Model.StampDutyData.States)
                    {
                        <option value="@state.TaxPercentage">@state.StateName</option>
                    }

                </select>

                <label for="instrumentDropdown" class="form-label">Select Instrument:</label>
                <select id="instrumentDropdown" name="instrumentName" class="form-select">

                    @foreach (var instrument in Model.StampDutyData.Instruments)
                    {
                        <option value="@instrument.InstrumentID">@instrument.InstrumentName</option>
                    }

                </select>
            </div>
            <div class="form-group">
                <label for="value" class="form-label">Enter Value (Rs):</label>
                <input id="value" type="text" class="form-control" />
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StampDutyData.States.FirstOrDefault().TaxPercentage, "Stamp Duty Rate(%)", new {@class="form-label"})
                @Html.TextBoxFor(model => model.StampDutyData.States.FirstOrDefault().TaxPercentage, new { @class = "form-control", @readonly = "readonly", id = "stampDutyPercentage", disabled = true })
            </div>

            <fieldset>
                <legend>Estimated Stamp Duty Amount (Rs.)</legend>
            <div class="form-group">
@*                 <label for="estimation">Estimated Stamp Duty Amount:</label> *@
                <input id="estimation" type="text" class="form-control" disabled />
            </div>
            </fieldset>
        </div>

        <div class="col-md-6">
            <h3>Stamp Duty Statewise Latest Documents</h3>
            @foreach (var stampDutyModel in Model.SelectedStateStampDutyList)
            {
                <h3>@stampDutyModel.StateName</h3>
                <ul>
                    @foreach (var stampDutyDoc in stampDutyModel.StampDutyDocs)
                    {
                        var idValue = $"{stampDutyModel.StateName}_{stampDutyDoc}";
                        var downloadLink = Url.Action("DownloadDoc", "Home", new { fileName = idValue });

                        <li>
                            @Html.ActionLink(stampDutyDoc, "DownloadDoc", "Home", new { fileName = idValue }, new { @id = idValue, @class = "download-link" })
                        </li>
                    }
                </ul>
            }
        </div>
    </div>

</div>
   



        <script>
            $(document).ready(function () {
                // $('li').click(function () {

                //     debugger;
                //     debugger;
                //     var x = this;
                //     downloadFile(this.id);
                // });
                $("#stateDropdown").change(function () {
                    //alert("changed");
                    //debugger;
                    // Update the value of the disabled input based on the selected option
                    var selectedOption = $(this).val();
                    $("#stampDutyPercentage").val(selectedOption);
                });

                $("#value").on('change keyup', function () {
                    //alert("changed val");
                    // Update the value of the disabled input based on the selected option
                    var enteredValue = $(this).val();
                    //$("#estimation").text("222");
            var percentage = $("#stampDutyPercentage").val();
                    let res = (enteredValue * percentage) / 100;
                    $("#estimation").val(res);
                });
            });


            function downloadFile(x) {

                var fileName = x;
                $.ajax({
                    type: "POST",
                    url: "/Home/DownloadDoc",
                    data: { fileName: fileName },
                    success: function (data) {
                        var blob = new Blob([data], { type: 'application/pdf' });
                        var url = URL.createObjectURL(blob);
                        var a = document.createElement("a");
                        a.style.display = "none";
                        a.href = url;
                        a.download = fileName;
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        // Handle errors
                    }
                });
            }
        </script>
